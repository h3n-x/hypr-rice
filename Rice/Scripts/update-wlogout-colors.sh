#!/bin/bash

# --------------------------------------------------------------
# Proyecto creado por hen-x
# GitHub: https://github.com/hen-x
# --------------------------------------------------------------

# Configuración de rutas
WLOGOUT_CONFIG_DIR="$HOME/.config/wlogout"
WLOGOUT_LAYOUT_FILE="$WLOGOUT_CONFIG_DIR/layout"
WLOGOUT_CSS_FILE="$WLOGOUT_CONFIG_DIR/style.css"
WLOGOUT_ICONS_DIR="$WLOGOUT_CONFIG_DIR/icons"
PYWAL_COLORS_SH="$HOME/.cache/wal/colors.sh"
PYWAL_COLORS_CSS="$HOME/.cache/wal/colors.css"

# Crear directorios necesarios
mkdir -p "$WLOGOUT_CONFIG_DIR"
mkdir -p "$WLOGOUT_ICONS_DIR"

# Verificar que existan los archivos de pywal
if [ ! -f "$PYWAL_COLORS_SH" ]; then
  echo "❌ Error: No se encontró el archivo de colores de pywal: $PYWAL_COLORS_SH"
  echo "Ejecuta pywal primero con: wal -i /path/to/wallpaper"
  exit 1
fi

# Función para leer colores de pywal
read_pywal_colors() {
  # Leer colores desde el archivo de pywal
  source "$PYWAL_COLORS_SH" 2>/dev/null || {
    echo "❌ Error: No se pudo leer el archivo de colores de pywal"
    exit 1
  }
}

# Función para generar el archivo layout con comandos de Hyprland (JSON válido)
generate_layout() {
  echo "{"
  echo "  \"label\" : \"lock\","
  echo "  \"action\" : \"hyprlock\","
  echo "  \"text\" : \"Lock\","
  echo "  \"keybind\" : \"l\""
  echo "},"
  echo "{"
  echo "  \"label\" : \"hibernate\","
  echo "  \"action\" : \"systemctl hibernate\","
  echo "  \"text\" : \"Hibernate\","
  echo "  \"keybind\" : \"h\""
  echo "},"
  echo "{"
  echo "  \"label\" : \"logout\","
  echo "  \"action\" : \"hyprctl dispatch exit\","
  echo "  \"text\" : \"Logout\","
  echo "  \"keybind\" : \"e\""
  echo "},"
  echo "{"
  echo "  \"label\" : \"shutdown\","
  echo "  \"action\" : \"systemctl poweroff\","
  echo "  \"text\" : \"Shutdown\","
  echo "  \"keybind\" : \"s\""
  echo "},"
  echo "{"
  echo "  \"label\" : \"suspend\","
  echo "  \"action\" : \"systemctl suspend\","
  echo "  \"text\" : \"Suspend\","
  echo "  \"keybind\" : \"u\""
  echo "},"
  echo "{"
  echo "  \"label\" : \"reboot\","
  echo "  \"action\" : \"systemctl reboot\","
  echo "  \"text\" : \"Reboot\","
  echo "  \"keybind\" : \"r\""
  echo "}"
}

# Función para generar el archivo CSS con colores de pywal usando SOLO propiedades GTK válidas
generate_css() {
  # Leer colores de pywal
  read_pywal_colors
  echo "/* === VARIABLES DE COLORES PYWAL (GTK @define-color) === */"
  echo "@define-color pywal_background $background;"
  echo "@define-color pywal_foreground $foreground;"
  echo "@define-color pywal_cursor $cursor;"
  echo "@define-color pywal_color0 $color0;"
  echo "@define-color pywal_color1 $color1;"
  echo "@define-color pywal_color2 $color2;"
  echo "@define-color pywal_color3 $color3;"
  echo "@define-color pywal_color4 $color4;"
  echo "@define-color pywal_color5 $color5;"
  echo "@define-color pywal_color6 $color6;"
  echo "@define-color pywal_color7 $color7;"
  echo "@define-color pywal_color8 $color8;"
  echo "@define-color pywal_color9 $color9;"
  echo "@define-color pywal_color10 $color10;"
  echo "@define-color pywal_color11 $color11;"
  echo "@define-color pywal_color12 $color12;"
  echo "@define-color pywal_color13 $color13;"
  echo "@define-color pywal_color14 $color14;"
  echo "@define-color pywal_color15 $color15;"
  echo ""

  echo "/* === COLORES DERIVADOS USANDO FUNCIONES GTK === */"
  echo "@define-color bg_light shade(@pywal_background, 1.2);"
  echo "@define-color bg_dark shade(@pywal_background, 0.8);"
  echo "@define-color fg_dim alpha(@pywal_foreground, 0.8);"
  echo "@define-color accent_light shade(@pywal_color4, 1.3);"
  echo "@define-color accent_dark shade(@pywal_color4, 0.7);"
  echo ""

  echo "/* === RESET Y ESTILOS GLOBALES === */"
  echo "* {"
  echo "    background-image: none;"
  echo "    box-shadow: none;"
  echo "    text-shadow: none;"
  echo "}"
  echo ""

  echo "/* === VENTANA PRINCIPAL === */"
  echo "window {"
  echo "    background-color: alpha(@pywal_background, 0.9);"
  echo "    font-family: \"Inter\", \"Roboto\", \"Noto Sans\", sans-serif;"
  echo "    font-size: 14px;"
  echo "    font-weight: 500;"
  echo "}"
  echo ""

  echo "/* === BOTONES BASE (Solo propiedades GTK oficiales) === */"
  echo "button {"
  echo "    background-repeat: no-repeat;"
  echo "    background-position: center;"
  echo "    background-size: 32px;"
  echo "    background-color: alpha(@pywal_color0, 0.85);"
  echo "    border-style: solid;"
  echo "    border-width: 2px;"
  echo "    border-radius: 16px;"
  echo "    border-color: alpha(@pywal_color1, 0.6);"
  echo "    color: @pywal_foreground;"
  echo "    font-size: 16px;"
  echo "    font-weight: 600;"
  echo "    font-family: inherit;"
  echo "    margin: 8px;"
  echo "    padding: 12px;"
  echo "    min-height: 140px;"
  echo "    min-width: 140px;"
  echo "    outline-style: none;"
  echo "    outline-width: 0px;"
  echo "    transition-property: all;"
  echo "    transition-duration: 250ms;"
  echo "    transition-timing-function: ease-out;"
  echo "}"
  echo ""

  echo "/* === ESTADOS DE BOTONES (Pseudo-clases GTK oficiales) === */"
  echo "button:hover {"
  echo "    background-color: alpha(@pywal_color1, 0.9);"
  echo "    border-color: @pywal_color2;"
  echo "    border-width: 3px;"
  echo "    color: @pywal_background;"
  echo "    box-shadow: 0px 4px 12px alpha(@pywal_color1, 0.4);"
  echo "}"
  echo ""
  echo "button:active {"
  echo "    background-color: @pywal_color2;"
  echo "    border-color: @pywal_color3;"
  echo "    color: @pywal_background;"
  echo "    transition-duration: 100ms;"
  echo "}"
  echo ""
  echo "button:focus {"
  echo "    background-color: alpha(@pywal_color1, 0.8);"
  echo "    border-color: @pywal_color4;"
  echo "    outline-style: solid;"
  echo "    outline-width: 2px;"
  echo "    outline-color: alpha(@pywal_color4, 0.6);"
  echo "    outline-offset: 2px;"
  echo "}"
  echo ""
  echo "button:disabled {"
  echo "    background-color: alpha(@pywal_color8, 0.5);"
  echo "    border-color: alpha(@pywal_color8, 0.3);"
  echo "    color: alpha(@pywal_foreground, 0.4);"
  echo "    opacity: 0.6;"
  echo "}"
  echo ""

  echo "/* === BOTONES ESPECÍFICOS CON ICONOS === */"
  echo "#lock {"
  echo "    background-image: image(url(\"$WLOGOUT_ICONS_DIR/lock.svg\"));"
  echo "    background-color: alpha(@pywal_color1, 0.3);"
  echo "    border-color: @pywal_color4;"
  echo "}"
  echo ""
  echo "#lock:hover {"
  echo "    background-color: alpha(@pywal_color4, 0.6);"
  echo "    border-color: shade(@pywal_color4, 1.2);"
  echo "    box-shadow: 0px 6px 16px alpha(@pywal_color6, 0.5);"
  echo "}"
  echo ""
  echo "#logout {"
  echo "    background-image: image(url(\"$WLOGOUT_ICONS_DIR/logout.svg\"));"
  echo "    background-color: alpha(@pywal_color1, 0.3);"
  echo "    border-color: @pywal_color4;"
  echo "}"
  echo ""
  echo "#logout:hover {"
  echo "    background-color: alpha(@pywal_color4, 0.6);"
  echo "    border-color: shade(@pywal_color4, 1.2);"
  echo "    box-shadow: 0px 6px 16px alpha(@pywal_color6, 0.5);"
  echo "}"
  echo ""
  echo "#suspend {"
  echo "    background-image: image(url(\"$WLOGOUT_ICONS_DIR/suspend.svg\"));"
  echo "    background-color: alpha(@pywal_color1, 0.3);"
  echo "    border-color: @pywal_color4;"
  echo "}"
  echo ""
  echo "#suspend:hover {"
  echo "    background-color: alpha(@pywal_color4, 0.6);"
  echo "    border-color: shade(@pywal_color4, 1.2);"
  echo "    box-shadow: 0px 6px 16px alpha(@pywal_color6, 0.5);"
  echo "}"
  echo ""
  echo "#hibernate {"
  echo "    background-image: image(url(\"$WLOGOUT_ICONS_DIR/hibernate.svg\"));"
  echo "    background-color: alpha(@pywal_color1, 0.3);"
  echo "    border-color: @pywal_color4;"
  echo "}"
  echo ""
  echo "#hibernate:hover {"
  echo "    background-color: alpha(@pywal_color4, 0.6);"
  echo "    border-color: shade(@pywal_color4, 1.2);"
  echo "    box-shadow: 0px 6px 16px alpha(@pywal_color6, 0.5);"
  echo "}"
  echo ""
  echo "#shutdown {"
  echo "    background-image: image(url(\"$WLOGOUT_ICONS_DIR/shutdown.svg\"));"
  echo "    background-color: alpha(@pywal_color1, 0.3);"
  echo "    border-color: @pywal_color4;"
  echo "}"
  echo ""
  echo "#shutdown:hover {"
  echo "    background-color: alpha(@pywal_color4, 0.6);"
  echo "    border-color: shade(@pywal_color4, 1.2);"
  echo "    box-shadow: 0px 6px 16px alpha(@pywal_color6, 0.5);"
  echo "}"
  echo ""
  echo "#reboot {"
  echo "    background-image: image(url(\"$WLOGOUT_ICONS_DIR/reboot.svg\"));"
  echo "    background-color: alpha(@pywal_color1, 0.3);"
  echo "    border-color: @pywal_color4;"
  echo "}"
  echo ""
  echo "#reboot:hover {"
  echo "    background-color: alpha(@pywal_color4, 0.6);"
  echo "    border-color: shade(@pywal_color4, 1.2);"
  echo "    box-shadow: 0px 6px 16px alpha(@pywal_color6, 0.5);"
  echo "}"
  echo ""

  echo "/* === EFECTOS AVANZADOS CON GRADIENTES GTK === */"
  echo "button {"
  echo "    background-image: linear-gradient(135deg, "
  echo "                      alpha(@pywal_color0, 0.1) 0%, "
  echo "                      alpha(@pywal_color1, 0.05) 100%),"
  echo "                      image(url(\"$WLOGOUT_ICONS_DIR/default.svg\"));"
  echo "}"
  echo ""

  echo "/* === ANIMACIONES CON @keyframes === */"
  echo "@keyframes pulse {"
  echo "    0% { opacity: 1; }"
  echo "    50% { opacity: 0.8; }"
  echo "    100% { opacity: 1; }"
  echo "}"
  echo ""
  echo "button:focus {"
  echo "    animation-name: pulse;"
  echo "    animation-duration: 1s;"
  echo "    animation-timing-function: ease-in-out;"
  echo "    animation-iteration-count: infinite;"
  echo "}"
  echo ""

  echo "/* === EFECTOS DE TEXTO === */"
  echo "button {"
  echo "    text-decoration-line: none;"
  echo "    text-shadow: 0px 1px 2px alpha(@pywal_background, 0.8);"
  echo "    letter-spacing: 0.5px;"
  echo "}"
  echo ""
  echo "button:hover {"
  echo "    text-shadow: 0px 2px 4px alpha(@pywal_background, 0.9);"
  echo "    letter-spacing: 1px;"
  echo "}"
  echo ""
}

# Función para crear un script de lanzamiento personalizado para Hyprland
generate_launcher() {
  local launcher_file="$WLOGOUT_CONFIG_DIR/launch-wlogout.sh"

  echo "#!/bin/bash"
  echo "# Script de lanzamiento de wlogout para Hyprland"
  echo "# Generado automáticamente el $(date)"
  echo ""
  echo "# Verificar que wlogout esté instalado"
  echo "if ! command -v wlogout &> /dev/null; then"
  echo "    echo \"❌ Error: wlogout no está instalado\""
  echo "    echo \"Instala con: paru -S wlogout-git o yay -S wlogout-git\""
  echo "    exit 1"
  echo "fi"
  echo ""
  echo "# Verificar que estemos en Hyprland"
  echo "if [ \"\$XDG_CURRENT_DESKTOP\" != \"Hyprland\" ] && [ -z \"\$HYPRLAND_INSTANCE_SIGNATURE\" ]; then"
  echo "    echo \"⚠️  Advertencia: No se detectó Hyprland\""
  echo "fi"
  echo ""
  echo "# Lanzar wlogout con configuración personalizada"
  echo "exec wlogout \\"
  echo "    --layout \"$WLOGOUT_LAYOUT_FILE\" \\"
  echo "    --css \"$WLOGOUT_CSS_FILE\" \\"
  echo "    --buttons-per-row 3 \\"
  echo "    --margin 20 \\"
  echo "    --margin-top 50 \\"
  echo "    --margin-bottom 50 \\"
  echo "    --protocol layer-shell"

  chmod +x "$launcher_file"
}

# Función para crear aliases útiles
create_wlogout_aliases() {
  local aliases_file="$WLOGOUT_CONFIG_DIR/wlogout-aliases.sh"

  echo "#!/bin/bash"
  echo "# Aliases útiles para wlogout con pywal en Hyprland"
  echo "# Fuente este archivo en tu .bashrc o .zshrc:"
  echo "# source ~/.config/wlogout/wlogout-aliases.sh"
  echo ""
  echo "# Alias principales"
  echo "alias wlogout-update='$PWD/update-wlogout-colors.sh'"
  echo "alias wlogout-run='$WLOGOUT_CONFIG_DIR/launch-wlogout.sh'"
  echo "alias wlogout-test='wlogout --layout $WLOGOUT_LAYOUT_FILE --css $WLOGOUT_CSS_FILE'"
  echo "alias wlogout-hypr='hyprctl dispatch exec $WLOGOUT_CONFIG_DIR/launch-wlogout.sh'"
  echo ""
  echo "# Funciones útiles para Hyprland"
  echo "wlogout-bind() {"
  echo "    echo \"# Agregar a ~/.config/hypr/hyprland.conf:\""
  echo "    echo \"bind = SUPER, L, exec, $WLOGOUT_CONFIG_DIR/launch-wlogout.sh\""
  echo "    echo \"bind = SUPER SHIFT, E, exec, $WLOGOUT_CONFIG_DIR/launch-wlogout.sh\""
  echo "}"
  echo ""
  echo "wlogout-edit() {"
  echo "    if [ \"\$1\" = \"layout\" ]; then"
  echo "        \${EDITOR:-nano} \"$WLOGOUT_LAYOUT_FILE\""
  echo "    elif [ \"\$1\" = \"css\" ]; then"
  echo "        \${EDITOR:-nano} \"$WLOGOUT_CSS_FILE\""
  echo "    else"
  echo "        echo \"Uso: wlogout-edit [layout|css]\""
  echo "        echo \"  layout - Editar archivo layout\""
  echo "        echo \"  css    - Editar archivo style.css\""
  echo "    fi"
  echo "}"
  echo ""
  echo "wlogout-status() {"
  echo "    echo \"📊 Estado de wlogout en Hyprland:\""
  echo "    if command -v wlogout &> /dev/null; then"
  echo "        echo \"  ✅ wlogout instalado: \$(wlogout --version 2>/dev/null || echo 'versión desconocida')\""
  echo "    else"
  echo "        echo \"  ❌ wlogout no instalado\""
  echo "    fi"
  echo "    if [ -n \"\$HYPRLAND_INSTANCE_SIGNATURE\" ]; then"
  echo "        echo \"  ✅ Ejecutándose en Hyprland\""
  echo "    else"
  echo "        echo \"  ⚠️  No se detectó Hyprland\""
  echo "    fi"
  echo "    echo \"  Archivos de configuración:\""
  echo "    echo \"    - Layout: $WLOGOUT_LAYOUT_FILE\""
  echo "    echo \"    - CSS: $WLOGOUT_CSS_FILE\""
  echo "    echo \"    - Iconos: $WLOGOUT_ICONS_DIR\""
  echo "    if [ -f \"$WLOGOUT_LAYOUT_FILE\" ]; then"
  echo "        echo \"  ✅ Layout existe\""
  echo "    else"
  echo "        echo \"  ❌ Layout no encontrado\""
  echo "    fi"
  echo "    if [ -f \"$WLOGOUT_CSS_FILE\" ]; then"
  echo "        echo \"  ✅ CSS existe\""
  echo "    else"
  echo "        echo \"  ❌ CSS no encontrado\""
  echo "    fi"
  echo "}"
  echo ""
  echo "# Función para integración con Hyprland"
  echo "hypr-wlogout-setup() {"
  echo "    echo \"🔧 Configurando wlogout en Hyprland...\""
  echo "    local hypr_config=\"\$HOME/.config/hypr/hyprland.conf\""
  echo "    if [ -f \"\$hypr_config\" ]; then"
  echo "        if ! grep -q \"wlogout\" \"\$hypr_config\"; then"
  echo "            echo \"\" >> \"\$hypr_config\""
  echo "            echo \"# wlogout keybinds\" >> \"\$hypr_config\""
  echo "            echo \"bind = SUPER, L, exec, $WLOGOUT_CONFIG_DIR/launch-wlogout.sh\" >> \"\$hypr_config\""
  echo "            echo \"bind = SUPER SHIFT, E, exec, $WLOGOUT_CONFIG_DIR/launch-wlogout.sh\" >> \"\$hypr_config\""
  echo "            echo \"✅ Keybinds agregados a hyprland.conf\""
  echo "        else"
  echo "            echo \"⚠️  wlogout ya está configurado en hyprland.conf\""
  echo "        fi"
  echo "    else"
  echo "        echo \"❌ No se encontró hyprland.conf\""
  echo "    fi"
  echo "}"
}

# Función para verificar dependencias de iconos
check_icons() {
  local missing_icons=()
  local icons=("lock.svg" "logout.svg" "suspend.svg" "hibernate.svg" "shutdown.svg" "reboot.svg")

  echo "🔍 Verificando iconos en $WLOGOUT_ICONS_DIR..."

  for icon in "${icons[@]}"; do
    if [ ! -f "$WLOGOUT_ICONS_DIR/$icon" ]; then
      missing_icons+=("$icon")
    fi
  done

  if [ ${#missing_icons[@]} -gt 0 ]; then
    echo "⚠️  Iconos faltantes:"
    for icon in "${missing_icons[@]}"; do
      echo "   - $icon"
    done
    echo ""
    echo "💡 Los iconos se buscarán en las siguientes ubicaciones:"
    echo "   - $WLOGOUT_ICONS_DIR/ (configurado)"
    echo "   - /usr/share/wlogout/icons/ (sistema)"
    echo "   - Fallback a color sólido"
    echo ""
  else
    echo "✅ Todos los iconos están presentes:"
    for icon in "${icons[@]}"; do
      echo "   ✓ $icon"
    done
  fi
}

# Función para crear documentación específica para Hyprland
create_documentation() {
  local docs_file="$WLOGOUT_CONFIG_DIR/README.md"

  echo "# Configuración de wlogout con pywal para Hyprland"
  echo ""
  echo "Esta configuración fue generada automáticamente para integrar wlogout con los colores de pywal en Hyprland."
  echo ""
  echo "## Archivos generados"
  echo ""
  echo "- \`layout\` - Configuración de botones en formato JSON válido con comandos de Hyprland"
  echo "- \`style.css\` - Estilos CSS con colores de pywal usando SOLO propiedades GTK oficiales"
  echo "- \`launch-wlogout.sh\` - Script de lanzamiento optimizado para Hyprland"
  echo "- \`wlogout-aliases.sh\` - Aliases y funciones útiles"
  echo "- \`README.md\` - Este archivo"
  echo ""
  echo "## Comandos específicos para Hyprland"
  echo ""
  echo "| Botón | Comando | Descripción |"
  echo "|-------|---------|-------------|"
  echo "| Lock | \`hyprlock\` | Bloqueo de pantalla nativo de Hyprland |"
  echo "| Logout | \`hyprctl dispatch exit\` | Salir de Hyprland |"
  echo "| Suspend | \`systemctl suspend\` | Suspender sistema |"
  echo "| Hibernate | \`systemctl hibernate\` | Hibernar sistema |"
  echo "| Shutdown | \`systemctl poweroff\` | Apagar sistema |"
  echo "| Reboot | \`systemctl reboot\` | Reiniciar sistema |"
  echo ""
  echo "## Propiedades CSS utilizadas (todas oficiales GTK)"
  echo ""
  echo "### Colores"
  echo "- \`@define-color\` - Variables de color"
  echo "- \`background-color\`, \`border-color\`, \`color\`"
  echo "- \`alpha()\`, \`shade()\` - Funciones de color GTK"
  echo ""
  echo "### Layout y dimensiones"
  echo "- \`min-width\`, \`min-height\`, \`margin\`, \`padding\`"
  echo "- \`border-width\`, \`border-style\`, \`border-radius\`"
  echo ""
  echo "### Efectos visuales"
  echo "- \`box-shadow\`, \`text-shadow\`"
  echo "- \`background-image\` con \`linear-gradient\` y \`image()\`"
  echo "- \`transition-*\` para animaciones suaves"
  echo ""
  echo "### Estados interactivos"
  echo "- \`:hover\`, \`:active\`, \`:focus\`, \`:disabled\`"
  echo "- \`@keyframes\` para animaciones"
  echo ""
  echo "## Uso básico"
  echo ""
  echo "\`\`\`bash"
  echo "# Lanzar wlogout"
  echo "./launch-wlogout.sh"
  echo ""
  echo "# O desde Hyprland"
  echo "hyprctl dispatch exec ~/.config/wlogout/launch-wlogout.sh"
  echo "\`\`\`"
  echo ""
  echo "## Integración con Hyprland"
  echo ""
  echo "### Keybinds recomendados"
  echo ""
  echo "Agrega estas líneas a \`~/.config/hypr/hyprland.conf\`:"
  echo ""
  echo "\`\`\`"
  echo "# wlogout"
  echo "bind = SUPER, L, exec, ~/.config/wlogout/launch-wlogout.sh"
  echo "bind = SUPER SHIFT, E, exec, ~/.config/wlogout/launch-wlogout.sh"
  echo "\`\`\`"
  echo ""
  echo "### Configuración automática"
  echo ""
  echo "\`\`\`bash"
  echo "# Cargar aliases"
  echo "source ~/.config/wlogout/wlogout-aliases.sh"
  echo ""
  echo "# Configurar keybinds automáticamente"
  echo "hypr-wlogout-setup"
  echo "\`\`\`"
  echo ""
  echo "## Personalización"
  echo ""
  echo "### Cambiar colores"
  echo ""
  echo "1. Ejecuta pywal con una nueva imagen:"
  echo "   \`\`\`bash"
  echo "   wal -i /path/to/your/wallpaper.jpg"
  echo "   \`\`\`"
  echo ""
  echo "2. Regenera la configuración:"
  echo "   \`\`\`bash"
  echo "   ./update-wlogout-colors.sh"
  echo "   \`\`\`"
  echo ""
  echo "## Iconos"
  echo ""
  echo "Los iconos se buscan en este orden:"
  echo "1. \`~/.config/wlogout/icons/\` (tu directorio personal)"
  echo "2. \`/usr/share/wlogout/icons/\` (sistema)"
  echo "3. Fallback a color sólido"
  echo ""
  echo "Iconos requeridos:"
  echo "- \`lock.svg\`, \`logout.svg\`, \`suspend.svg\`"
  echo "- \`hibernate.svg\`, \`shutdown.svg\`, \`reboot.svg\`"
  echo ""
  echo "## Compatibilidad"
  echo ""
  echo "- **Hyprland** (compositor Wayland)"
  echo "- **wlogout** (cualquier versión reciente)"
  echo "- **Pywal** (python-pywal)"
  echo "- **Arch Linux** (y derivados)"
  echo "- **GTK 3/4** (para CSS)"
  echo ""
  echo "## Información del sistema"
  echo ""
  echo "- Wallpaper actual: \`$wallpaper\`"
  echo "- Generado el: \`$(date)\`"
  echo "- Sistema: Arch Linux + Hyprland"
  echo "- Iconos disponibles: $(ls "$WLOGOUT_ICONS_DIR" 2>/dev/null | wc -l) archivos"
}

# Función principal
main() {
  echo "🎨 Configurando wlogout con colores de pywal para Hyprland..."
  echo ""

  # Verificar dependencias
  echo "🔍 Verificando dependencias..."
  if ! command -v wlogout &>/dev/null; then
    echo "⚠️  Advertencia: wlogout no está instalado"
    echo "   Instala con: paru -S wlogout-git o yay -S wlogout-git"
  else
    echo "✅ wlogout encontrado"
  fi

  if [ -n "$HYPRLAND_INSTANCE_SIGNATURE" ]; then
    echo "✅ Ejecutándose en Hyprland"
  else
    echo "⚠️  No se detectó Hyprland (continuando de todas formas)"
  fi

  if ! command -v hyprlock &>/dev/null; then
    echo "⚠️  hyprlock no encontrado, usando swaylock como fallback"
    echo "   Instala con: paru -S hyprlock"
  else
    echo "✅ hyprlock encontrado"
  fi

  # Generar archivos de configuración
  echo "📝 Generando layout de botones para Hyprland (JSON válido)..."
  generate_layout >"$WLOGOUT_LAYOUT_FILE"

  echo "🎨 Generando CSS con colores de pywal (solo propiedades GTK oficiales)..."
  generate_css >"$WLOGOUT_CSS_FILE"

  echo "🚀 Creando script de lanzamiento para Hyprland..."
  generate_launcher

  echo "⚡ Creando aliases útiles..."
  create_wlogout_aliases

  echo "📚 Creando documentación..."
  create_documentation

  # Verificar iconos
  check_icons

  echo ""
  echo "✅ Configuración de wlogout para Hyprland completada exitosamente!"
  echo "📁 Archivos generados:"
  echo "   - Layout: $WLOGOUT_LAYOUT_FILE"
  echo "   - CSS: $WLOGOUT_CSS_FILE"
  echo "   - Lanzador: $WLOGOUT_CONFIG_DIR/launch-wlogout.sh"
  echo "   - Aliases: $WLOGOUT_CONFIG_DIR/wlogout-aliases.sh"
  echo "   - Documentación: $WLOGOUT_CONFIG_DIR/README.md"
  echo ""
  echo "🎨 Colores aplicados desde: $PYWAL_COLORS_SH"
  echo ""
  echo "💡 Uso rápido:"
  echo "   - Lanzar: $WLOGOUT_CONFIG_DIR/launch-wlogout.sh"
  echo "   - Desde Hyprland: hyprctl dispatch exec $WLOGOUT_CONFIG_DIR/launch-wlogout.sh"
  echo "   - Activar aliases: source $WLOGOUT_CONFIG_DIR/wlogout-aliases.sh"
  echo ""
  echo "🎯 Características incluidas:"
  echo "   - ✅ JSON válido para layout"
  echo "   - ✅ Comandos específicos para Hyprland (hyprctl dispatch exit, hyprlock)"
  echo "   - ✅ CSS usando SOLO propiedades GTK oficiales"
  echo "   - ✅ Colores adaptativos basados en pywal"
  echo "   - ✅ Iconos SVG desde tu directorio ~/.config/wlogout/icons/"
  echo "   - ✅ Efectos visuales con hover/focus/active/disabled"
  echo "   - ✅ Animaciones con @keyframes"
  echo "   - ✅ Gradientes y transparencias"
  echo "   - ✅ Sistema de backup automático"
  echo "   - ✅ Compatible con layer-shell protocol"
  echo ""
  echo "⌨️  Teclas de acceso rápido:"
  echo "   - L: Lock (hyprlock) | E: Logout (hyprctl exit) | U: Suspend"
  echo "   - H: Hibernate | S: Shutdown | R: Reboot"
  echo "   - ESC: Salir sin acción"
  echo ""
  echo "🔧 Configuración de Hyprland:"
  echo "   1. Carga aliases: source $WLOGOUT_CONFIG_DIR/wlogout-aliases.sh"
  echo "   2. Configura keybinds: hypr-wlogout-setup"
  echo "   3. O agrega manualmente a hyprland.conf:"
  echo "      bind = SUPER, L, exec, $WLOGOUT_CONFIG_DIR/launch-wlogout.sh"
  echo ""
  echo "🎨 Próximos pasos:"
  echo "   1. Lanza wlogout: $WLOGOUT_CONFIG_DIR/launch-wlogout.sh"
  echo "   2. Personaliza estilos en: $WLOGOUT_CSS_FILE"
  echo "   3. Ejecuta el script cada vez que cambies wallpaper con pywal"
  echo ""
  echo "📖 Lee la documentación completa en: $WLOGOUT_CONFIG_DIR/README.md"
}

# Ejecutar función principal
main "$@"
